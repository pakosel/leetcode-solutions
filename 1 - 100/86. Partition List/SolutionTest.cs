using System.Text;
using NUnit.Framework;
using NUnit.Framework.Legacy;
using System.Linq;
using System.Collections.Generic;
using Common;

namespace PartitionList
{
    [TestFixture]
    public class SolutionTest
    {
        private static readonly object[] testCases =
        {
            new object[] {"[]", 3, "[]"},
            new object[] {"[1,4,3,2,5,2]", 3, "[1,2,2,4,3,5]"},
            new object[] {"[2,1]", 2, "[1,2]"},
            new object[] {"[88,-43,27,-90,-68,-45,-34,0,-52,-46,50,26,-100,30,-9,46,94,-26,-69,51,-36,-97,-8,-51,-79,-60,-85,-24,-74,-39,87,-61,-67,12,83,84,-83,-75,21,52,100,37,-94,33,-28,-71,80,-62,-32,98,23,38,78,15,66,22,99,92,79,17,-31,1,43,60,-2,20,44,-84,-35,47,54,70,89,93,-58,9,-65,-33,-91,-18,-15,-98,-22,-53,2,-95,19,-86,-6,7,-80,64,-54,-66,-70,-37,-13,39,49,-41,77,71,-47,28,-87,5,85,-73,45,6,8,57,-93,90,82,-92,31,-40,73,-19,32,-72,-48,-12,18,-7,91,69,55,67,16,-21,-25,62,-4,-56,42,-59,-55,3,-88,40,76,48,35,-5,4,-49,56,-77,53,-3,-57,72,-63,63,-30,61,68,-29,-38,95,86,-50,25,13,75,-82,-11,58,-81,74,24,65,81,14,-17,36,59,-1,-99,-14,-78,-23,-44,-89,-27,-16,96,-96,-64,-76,-42,97,29,-20,-10,10,41,11]", 13, "[-43,-90,-68,-45,-34,0,-52,-46,-100,-9,-26,-69,-36,-97,-8,-51,-79,-60,-85,-24,-74,-39,-61,-67,12,-83,-75,-94,-28,-71,-62,-32,-31,1,-2,-84,-35,-58,9,-65,-33,-91,-18,-15,-98,-22,-53,2,-95,-86,-6,7,-80,-54,-66,-70,-37,-13,-41,-47,-87,5,-73,6,8,-93,-92,-40,-19,-72,-48,-12,-7,-21,-25,-4,-56,-59,-55,3,-88,-5,4,-49,-77,-3,-57,-63,-30,-29,-38,-50,-82,-11,-81,-17,-1,-99,-14,-78,-23,-44,-89,-27,-16,-96,-64,-76,-42,-20,-10,10,11,88,27,50,26,30,46,94,51,87,83,84,21,52,100,37,33,80,98,23,38,78,15,66,22,99,92,79,17,43,60,20,44,47,54,70,89,93,19,64,39,49,77,71,28,85,45,57,90,82,31,73,32,18,91,69,55,67,16,62,42,40,76,48,35,56,53,72,63,61,68,95,86,25,13,75,58,74,24,65,81,14,36,59,96,97,29,41]"},
        };

        [Test]
        [TestCaseSource("testCases")]
        public void Test_GenericStr(string listStr, int x, string expectedStr)
        {
            var head = ListNodeHelper.BuildList(listStr);
            var expected = ListNodeHelper.BuildList(expectedStr);

            var sol = new Solution();
            var res = sol.Partition(head, x);

            Assert.That(ListNodeHelper.AreEqual(expected, res));
        }
    }
}