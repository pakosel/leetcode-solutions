using System.Text;
using NUnit.Framework;
using System.Linq;
using System.Collections.Generic;
using Common;

namespace RangeSumOfSortedSubarraySums
{
    [TestFixture]
    public class SolutionTest
    {
        private static readonly object[] testCasesStr =
        {
            new object[] {"[1,2,3,4]", 4, 1, 5, 13},
            new object[] {"[1,2,3,4]", 4, 3, 4, 6},
            new object[] {"[1,2,3,4]", 4, 1, 10, 50},
            new object[] {"[60,100,88,69,30,68,89,74,91,72,86,45,60,60,92,40,8,57,57,99,62,40,12,1,5,3,61,92,17,55,6,14,80,53,41,69,91,9,64,4,79,81,60,100,17,56,21,20,63,31,1,62,86,38,57,98,75,95,64,93,37,36,56,95,20,93,41,32,18,8,36,78,33,46,95,95,41,90,33,68,76,87,1,71,41,19,70,54,64,54,37,11,13,30,90,85,48,77,67,54,42,58,32,5,24,100,21,78,53,89,57,46,79,36,80,65,44,21,98,6,19,97,36,14,22,76,33,30,36,42,83,16,69,41,60,93,13,55,27,40,5,29,45,23,4,2,89,22,12,54,58,64,78,37,3,95,44,94,57,98,88,71,67,8,25,60,31,20,100,58,62,46,24,29,42,62,12,4,54,75,93,16,79,100,47,54,94,56,6,20,44,25,76,10,24,26,69,64,95,8,61,86,3,81,48,29,81,9,24,2,11,78,5,5,29,99,89,82,78,5,31,71,35,25,73,84,5,85,1,25,24,59,39,53,46,31,79,32,34,89,33,7,91,70,43,87,28,65,9,2,19,18,17,73,8,94,86,41,99,5,74,85,79,9,94,33,32,45,10,89,16,27,35,72,71,41,3,10,34,3,29,90,49,26,98,41,54,50,84,2,8,45,72,37,14,47,17,76,99,88,20,86,39,61,98,12,66,92,20,83,18,25,82,68,9,67,15,95,84,17,46,55,63,20,61,18,3,96,75,12,40,8,37,89,34,71,45,82,39,60,30,69,76,86,13,79,40,20,3,39,26,35,38,47,56,89,43,42,9,94,5,67,38,54,80,22,5,3,39,24,56,15,48,12,5,62,60,71,56,92,79,57,18,44,67,6,25,25,16,2,33,60,62,25,54,14,66,39,54,20,53,30,27,65,1,81,57,44,85,4,58,13,26,40,15,39,27,17,30,11,65,80,93,58,95,78,24,81,86,30,28,74,55,88,69,30,71,76,16,52,90,5,23,24,27,4,92,100,36,26,79,41,34,92,74,70,84,30,84,67,68,23,3,55,22,67,45,17,12,7,24,89,62,7,56,97,69,42,93,66,86,70,35,77,88,38,62,6,15,82,19,72,82,61,54,28,62,15,37,67,10,5,69,14,6,62,26,51,97,6,73,9,19,19,12,21,79,69,39,47,93,16,94,39,20,8,87,88,79,83,71,40,21,24,25,78,26,61,91,17,22,14,25,31,45,31,61,24,43,25,78,1,26,77,59,34,3,51,23,47,70,86,90,81,91,22,7,87,33,27,84,72,25,92,87,66,33,96,52,29,49,12,40,97,1,35,17,14,19,15,16,84,60,32,60,62,84,9,9,5,71,71,1,85,23,29,15,23,39,24,37,26,93,71,25,18,97,6,25,95,76,47,37,35,42,86,31,86,45,9,79,28,22,38,8,48,52,1,82,63,17,85,13,91,11,3,29,11,54,42,62,8,82,88,23,49,84,12,57,6,72,63,90,84,76,57,81,32,18,78,3,80,28,32,85,89,7,62,99,40,22,67,45,50,6,32,11,82,85,23,54,66,19,22,46,72,84,1,74,42,14,74,89,50,89,61,94,2,40,80,2,8,82,52,29,66,11,27,52,24,69,65,87,63,94,49,28,43,8,39,44,59,53,18,21,50,65,70,60,54,4,21,72,8,9,26,95,9,73,94,78,78,41,100,76,32,34,58,98,90,4,43,34,49,17,91,24,6,44,67,56,98,10,39,21,63,33,4,27,93,80,62,22,64,75,74,2,26,9,88,14,33,98,89,55,54,92,45,57,48,76,10,25,56,80,94,88,54,61,19,19,4,96,40,34,17,93,17,24,39,29,68,7,42,33,65,45,66,4,66,79,87,85,24,34,14,90,86,12,44,70,37,24,88,36,45,57,87,57,42,23,20,69,46,10,14,73,96,49,18,38,11,43,80,91,31,50,50,99,49,11,2,45,31,19,21,18,73,11,51,50,16,46,41,7,1,98,51,18,63,70,19,95,69,22,37,81,25,1,51,73,70,84,5,95,19,51,67,79,36,15,6,5,27,18,98,65,84,28,42,50,40,26,30,3,12,52,52,72,6,83,59,59,56,29,34,18,80,49,41,54,42,22,42,40,1,80,97,78,45,99,63,83,43,37,99,54,3,16,57,83,17,55,79,77,7,87,49,6,81,13,46,46,55,1,85,32,53,64,92,25,23,94,60,92,13,2,61,87,91,8,77,32,45,90,14,94,51,63,86]", 1000, 1, 500500, 909093055},
        };

        [Test]
        [TestCaseSource("testCasesStr")]
        public void Test_GenericStr(string numsStr, int n, int left, int right, int expected)
        {
            var nums = ArrayHelper.ArrayFromString<int>(numsStr);

            var sol = new Solution();
            var res = sol.RangeSum(nums, n, left, right);

            Assert.That(expected, Is.EqualTo(res));
        }
    }
}