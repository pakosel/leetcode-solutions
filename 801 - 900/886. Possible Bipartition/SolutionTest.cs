using System.Text;
using NUnit.Framework;
using System.Linq;
using System.Collections.Generic;
using Common;

namespace PossibleBipartition
{
    [TestFixture]
    public class SolutionTest
    {
        private static readonly object[] testCasesStr =
        {
            new object[] {1, "[]", true},
            new object[] {6, "[[1,2],[4,5]]", true},
            new object[] {4, "[[1,2],[1,3],[2,4]]", true},
            new object[] {3, "[[1,2],[1,3],[2,3]]", false},
            new object[] {5, "[[1,2],[2,3],[3,4],[4,5],[1,5]]", false},
            new object[] {5, "[[1,2],[3,4],[4,5],[3,5]]", false},
            new object[] {6, "[[1,2],[2,3],[4,5],[3,4],[5,6],[1,6]]", true},
            new object[] {50, "[[21,47],[4,41],[2,41],[36,42],[32,45],[26,28],[32,44],[5,41],[29,44],[10,46],[1,6],[7,42],[46,49],[17,46],[32,35],[11,48],[37,48],[37,43],[8,41],[16,22],[41,43],[11,27],[22,44],[22,28],[18,37],[5,11],[18,46],[22,48],[1,17],[2,32],[21,37],[7,22],[23,41],[30,39],[6,41],[10,22],[36,41],[22,25],[1,12],[2,11],[45,46],[2,22],[1,38],[47,50],[11,15],[2,37],[1,43],[30,45],[4,32],[28,37],[1,21],[23,37],[5,37],[29,40],[6,42],[3,11],[40,42],[26,49],[41,50],[13,41],[20,47],[15,26],[47,49],[5,30],[4,42],[10,30],[6,29],[20,42],[4,37],[28,42],[1,16],[8,32],[16,29],[31,47],[15,47],[1,5],[7,37],[14,47],[30,48],[1,10],[26,43],[15,46],[42,45],[18,42],[25,42],[38,41],[32,39],[6,30],[29,33],[34,37],[26,38],[3,22],[18,47],[42,48],[22,49],[26,34],[22,36],[29,36],[11,25],[41,44],[6,46],[13,22],[11,16],[10,37],[42,43],[12,32],[1,48],[26,40],[22,50],[17,26],[4,22],[11,14],[26,39],[7,11],[23,26],[1,20],[32,33],[30,33],[1,25],[2,30],[2,46],[26,45],[47,48],[5,29],[3,37],[22,34],[20,22],[9,47],[1,4],[36,46],[30,49],[1,9],[3,26],[25,41],[14,29],[1,35],[23,42],[21,32],[24,46],[3,32],[9,42],[33,37],[7,30],[29,45],[27,30],[1,7],[33,42],[17,47],[12,47],[19,41],[3,42],[24,26],[20,29],[11,23],[22,40],[9,37],[31,32],[23,46],[11,38],[27,29],[17,37],[23,30],[14,42],[28,30],[29,31],[1,8],[1,36],[42,50],[21,41],[11,18],[39,41],[32,34],[6,37],[30,38],[21,46],[16,37],[22,24],[17,32],[23,29],[3,30],[8,30],[41,48],[1,39],[8,47],[30,44],[9,46],[22,45],[7,26],[35,42],[1,27],[17,30],[20,46],[18,29],[3,29],[4,30],[3,46]]", true},
            new object[] {50, "[[24,30],[39,46],[20,25],[15,20],[30,41],[17,20],[2,22],[8,50],[13,30],[2,5],[18,30],[16,50],[3,24],[3,45],[4,46],[11,22],[8,26],[5,47],[28,46],[5,7],[35,36],[18,20],[15,49],[25,49],[3,23],[30,31],[5,24],[4,16],[4,35],[8,38],[32,35],[22,42],[5,34],[20,36],[7,35],[10,22],[8,12],[1,49],[16,43],[5,14],[20,42],[35,41],[8,18],[5,27],[5,26],[30,45],[11,16],[22,23],[5,37],[22,26],[11,35],[26,49],[21,49],[20,47],[3,17],[14,22],[21,46],[29,49],[8,45],[22,45],[5,43],[20,21],[8,32],[13,16],[16,32],[11,46],[15,46],[2,49],[8,25],[3,44],[5,17],[20,31],[21,30],[17,22],[35,39],[16,48],[12,46],[46,50],[20,33],[3,6],[32,49],[22,36],[20,28],[12,49],[1,30],[6,46],[3,15],[18,22],[16,42],[30,50],[5,13],[20,43],[3,21],[3,25],[46,47],[22,33],[1,20],[16,17],[40,46],[5,36],[12,20],[35,44],[16,36],[22,27],[3,10],[2,30],[31,49],[5,6],[35,50],[8,29],[20,40],[25,46],[25,35],[5,29],[20,27],[5,42],[30,44],[8,33],[9,22],[5,39],[35,43],[9,49],[17,49],[3,47],[26,46],[6,8],[20,24],[3,32],[22,47],[30,40],[7,30],[16,19],[12,30],[35,38],[16,44],[5,9],[11,49],[43,46],[14,30],[13,46],[20,34],[26,35],[22,37],[21,35],[45,49],[10,46],[5,32],[12,16],[30,47],[3,13],[7,46],[10,49],[6,20],[18,49],[17,35],[13,49],[3,41],[22,38],[2,46],[8,37],[16,18],[30,38],[35,47],[33,35],[41,46],[20,26],[8,11],[16,40],[23,30],[5,15],[20,41],[3,19],[5,28],[4,20],[3,36],[5,41],[8,34],[16,31],[5,38],[35,42],[9,35],[1,8],[42,46],[3,29],[8,27],[4,30]]", true},
        };

        [Test]
        [TestCaseSource("testCasesStr")]
        public void Test_Generic(int n, string dislikesStr, bool expected)
        {
            var dislikes = ArrayHelper.MatrixFromString<int>(dislikesStr);

            var sol = new Solution();
            var res = sol.PossibleBipartition(n, dislikes);

            Assert.That(expected == res);
        }
    }
}